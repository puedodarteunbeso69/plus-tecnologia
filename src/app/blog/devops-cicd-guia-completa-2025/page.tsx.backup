import { Navigation } from "@/components/Navigation";
import { WhatsAppChat } from "@/components/WhatsAppChat";
import { Badge } from "@/components/ui/badge";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { CheckCircle, Clock, User, ArrowLeft, GitBranch, Rocket, Shield, Zap, Settings, Monitor } from "lucide-react";
import Image from "next/image";
import Link from "next/link";

export const metadata = {
  title: "DevOps y CI/CD: Gu√≠a Completa 2025 | PLUS TECNOLOGIA",
  description: "Gu√≠a definitiva de DevOps y CI/CD en 2025: GitHub Actions, Docker, Kubernetes, monitoring y pipelines de producci√≥n. Casos pr√°cticos y mejores pr√°cticas.",
  keywords: ["DevOps", "CI/CD", "GitHub Actions", "Docker", "Kubernetes", "pipeline", "deployment", "automation", "monitoring", "2025"],
  openGraph: {
    title: "DevOps y CI/CD: Gu√≠a Completa 2025",
    description: "Todo lo que necesitas saber sobre DevOps moderno: herramientas, pipelines y automatizaci√≥n para equipos de desarrollo.",
    images: ["/images/devops-cicd-2025.jpg"],
    type: "article"
  }
};

const devopsTools = [
  {
    category: "Version Control & CI/CD",
    description: "Control de versiones y pipelines de integraci√≥n continua",
    tools: [
      { name: "GitHub Actions", adoption: "78%", trend: "+25%" },
      { name: "GitLab CI", adoption: "45%", trend: "+15%" },
      { name: "Jenkins", adoption: "52%", trend: "-8%" },
      { name: "Azure DevOps", adoption: "38%", trend: "+2%" }
    ]
  },
  {
    category: "Containerization & Orchestration",
    description: "Contenedores y orquestaci√≥n de aplicaciones",
    tools: [
      { name: "Docker", adoption: "89%", trend: "+3%" },
      { name: "Kubernetes", adoption: "67%", trend: "+28%" },
      { name: "Docker Compose", adoption: "72%", trend: "+5%" },
      { name: "Helm", adoption: "41%", trend: "+35%" }
    ]
  },
  {
    category: "Cloud Platforms",
    description: "Plataformas cloud para deployment y scaling",
    tools: [
      { name: "AWS", adoption: "76%", trend: "+8%" },
      { name: "Azure", adoption: "58%", trend: "+18%" },
      { name: "Google Cloud", adoption: "34%", trend: "+12%" },
      { name: "Vercel/Netlify", adoption: "45%", trend: "+42%" }
    ]
  },
  {
    category: "Monitoring & Observability",
    description: "Monitoreo, logging y observabilidad de aplicaciones",
    tools: [
      { name: "Prometheus", adoption: "54%", trend: "+22%" },
      { name: "Grafana", adoption: "48%", trend: "+25%" },
      { name: "DataDog", adoption: "31%", trend: "+18%" },
      { name: "New Relic", adoption: "28%", trend: "+3%" }
    ]
  }
];

const pipelineStages = [
  {
    stage: "Code",
    description: "Desarrollo y control de versiones",
    tools: ["Git", "GitHub/GitLab", "Code Review"],
    duration: "Continuo",
    automation: "95%"
  },
  {
    stage: "Build",
    description: "Compilaci√≥n y empaquetado de aplicaciones",
    tools: ["Docker", "npm/yarn", "Maven/Gradle"],
    duration: "2-10 min",
    automation: "98%"
  },
  {
    stage: "Test",
    description: "Testing automatizado multi-nivel",
    tools: ["Jest", "Cypress", "SonarQube"],
    duration: "5-30 min",
    automation: "85%"
  },
  {
    stage: "Deploy",
    description: "Despliegue a entornos staging/producci√≥n",
    tools: ["Kubernetes", "Terraform", "Ansible"],
    duration: "1-5 min",
    automation: "78%"
  },
  {
    stage: "Monitor",
    description: "Monitoreo y observabilidad continua",
    tools: ["Prometheus", "Grafana", "PagerDuty"],
    duration: "24/7",
    automation: "92%"
  }
];

const devopsMetrics = [
  {
    metric: "Deployment Frequency",
    description: "Frecuencia de deployments a producci√≥n",
    elite: "M√∫ltiples por d√≠a",
    high: "1-7 por semana",
    medium: "1-4 por mes",
    low: "< 1 por mes"
  },
  {
    metric: "Lead Time for Changes",
    description: "Tiempo desde commit hasta producci√≥n",
    elite: "< 1 d√≠a",
    high: "1-7 d√≠as",
    medium: "1-6 meses",
    low: "> 6 meses"
  },
  {
    metric: "Mean Time to Recovery",
    description: "Tiempo promedio para resolver incidentes",
    elite: "< 1 hora",
    high: "< 1 d√≠a",
    medium: "1-7 d√≠as",
    low: "> 7 d√≠as"
  },
  {
    metric: "Change Failure Rate",
    description: "Porcentaje de deployments que causan fallos",
    elite: "0-15%",
    high: "16-30%",
    medium: "31-45%",
    low: "> 45%"
  }
];

export default function DevOpsCICDPage() {
  return (
    <div className="min-h-screen bg-white">
      <Navigation />

      {/* Breadcrumb */}
      <div className="bg-gray-50 py-4">
        <div className="container mx-auto px-4 lg:px-8">
          <nav className="text-sm">
            <Link href="/" className="text-gray-500 hover:text-blue-600">Inicio</Link>
            <span className="mx-2 text-gray-400">/</span>
            <Link href="/blog" className="text-gray-500 hover:text-blue-600">Blog</Link>
            <span className="mx-2 text-gray-400">/</span>
            <span className="text-gray-900">DevOps CI/CD Gu√≠a Completa 2025</span>
          </nav>
        </div>
      </div>

      {/* Article Header */}
      <article className="py-16">
        <div className="container mx-auto px-4 lg:px-8 max-w-4xl">

          {/* Back Button */}
          <Link href="/blog" className="inline-flex items-center text-blue-600 hover:text-blue-700 mb-8">
            <ArrowLeft className="w-4 h-4 mr-2" />
            Volver al Blog
          </Link>

          {/* Article Meta */}
          <div className="mb-8">
            <Badge className="bg-green-100 text-green-700 mb-4">
              <GitBranch className="w-4 h-4 mr-2" />
              DevOps & CI/CD
            </Badge>

            <h1 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6 leading-tight">
              DevOps y CI/CD: Gu√≠a Completa 2025 para Equipos Modernos
            </h1>

            <div className="flex items-center space-x-6 text-gray-600 mb-8">
              <div className="flex items-center">
                <User className="w-4 h-4 mr-2" />
                <span>Equipo PLUS TECNOLOGIA</span>
              </div>
              <div className="flex items-center">
                <Clock className="w-4 h-4 mr-2" />
                <span>16 min lectura</span>
              </div>
              <time>24 Enero 2025</time>
            </div>

            {/* Featured Image */}
            <div className="relative h-64 md:h-96 rounded-xl overflow-hidden mb-8">
              <Image
                src="https://images.unsplash.com/photo-1556075798-4825dfaaf498?w=1200&h=400&fit=crop&auto=format&q=85"
                alt="DevOps CI/CD Pipeline automation"
                fill
                className="object-cover"
                priority
              />
            </div>
          </div>

          {/* Article Content */}
          <div className="prose prose-lg max-w-none">

            <div className="bg-green-50 border border-green-200 rounded-lg p-6 mb-8">
              <h2 className="text-xl font-semibold text-gray-900 mb-3">üöÄ En esta gu√≠a completa aprender√°s:</h2>
              <ul className="space-y-2 text-gray-700">
                <li>‚Ä¢ Estado actual del ecosistema DevOps y tendencias 2025</li>
                <li>‚Ä¢ Herramientas esenciales: GitHub Actions, Docker, Kubernetes</li>
                <li>‚Ä¢ Pipelines CI/CD completos con c√≥digo real de producci√≥n</li>
                <li>‚Ä¢ M√©tricas DORA y c√≥mo medir performance de equipos</li>
                <li>‚Ä¢ Monitoring, observabilidad y incident response</li>
                <li>‚Ä¢ Casos de √©xito: desde startup hasta enterprise</li>
              </ul>
            </div>

            <h2 className="text-2xl font-bold text-gray-900 mb-4">El Estado de DevOps en 2025: Madurez y Automatizaci√≥n</h2>

            <p className="text-lg text-gray-700 mb-6">
              DevOps ha evolucionado de una metodolog√≠a emergente a la columna vertebral de organizaciones tecnol√≥gicas exitosas. En 2025, el 87% de las empresas implementan pr√°cticas DevOps, con un ROI promedio del 22% en el primer a√±o de adopci√≥n.
            </p>

            <p className="text-lg text-gray-700 mb-8">
              Los equipos elite de DevOps despliegan 200 veces m√°s frecuentemente que los equipos low-performers, con 24 veces menor tiempo de recovery y 3 veces menor change failure rate. La diferencia no est√° solo en las herramientas, sino en la cultura y procesos.
            </p>

            <div className="bg-gradient-to-r from-green-600 to-blue-600 text-white rounded-lg p-6 mb-8">
              <h3 className="text-xl font-bold mb-4">üìä DevOps by the Numbers 2025</h3>
              <div className="grid md:grid-cols-4 gap-4">
                <div className="text-center">
                  <div className="text-3xl font-bold">87%</div>
                  <div className="text-sm opacity-90">Empresas usando DevOps</div>
                </div>
                <div className="text-center">
                  <div className="text-3xl font-bold">22%</div>
                  <div className="text-sm opacity-90">ROI promedio primer a√±o</div>
                </div>
                <div className="text-center">
                  <div className="text-3xl font-bold">200x</div>
                  <div className="text-sm opacity-90">M√°s deployments (elite teams)</div>
                </div>
                <div className="text-center">
                  <div className="text-3xl font-bold">65%</div>
                  <div className="text-sm opacity-90">Reducci√≥n time-to-market</div>
                </div>
              </div>
            </div>

            <h2 className="text-2xl font-bold text-gray-900 mb-6">Herramientas DevOps 2025: El Stack Moderno</h2>

            <div className="space-y-6 mb-8">
              {devopsTools.map((category, index) => (
                <Card key={category.category} className="border border-gray-200">
                  <CardHeader>
                    <CardTitle className="text-lg flex items-center">
                      <Settings className="w-5 h-5 text-green-600 mr-2" />
                      {category.category}
                    </CardTitle>
                    <CardDescription>{category.description}</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="grid md:grid-cols-2 gap-4">
                      {category.tools.map((tool, i) => (
                        <div key={tool.name} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                          <div>
                            <span className="font-medium text-gray-900">{tool.name}</span>
                            <div className="text-sm text-gray-600">Adopci√≥n: {tool.adoption}</div>
                          </div>
                          <div className="text-right">
                            <div className="text-sm font-medium">{tool.trend}</div>
                          </div>
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>

            <h2 className="text-2xl font-bold text-gray-900 mb-4">Pipeline CI/CD Completo: De C√≥digo a Producci√≥n</h2>

            <p className="text-lg text-gray-700 mb-6">
              Un pipeline CI/CD moderno automatiza completamente el flujo desde commit hasta producci√≥n. Vamos a construir un pipeline real para una aplicaci√≥n Next.js con GitHub Actions, Docker y Kubernetes.
            </p>

            <div className="grid md:grid-cols-5 gap-4 mb-8">
              {pipelineStages.map((stage, index) => (
                <Card key={stage.stage} className="text-center">
                  <CardHeader>
                    <div className="w-12 h-12 bg-green-600 text-white rounded-full flex items-center justify-center mx-auto mb-2">
                      {index + 1}
                    </div>
                    <CardTitle className="text-lg">{stage.stage}</CardTitle>
                    <CardDescription className="text-sm">{stage.description}</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-2 text-sm">
                      <div>
                        <span className="text-gray-600">Duraci√≥n:</span>
                        <div className="font-medium">{stage.duration}</div>
                      </div>
                      <div>
                        <span className="text-gray-600">Automatizaci√≥n:</span>
                        <div className="font-medium text-green-600">{stage.automation}</div>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>

            <h3 className="text-xl font-semibold text-gray-900 mb-4">Implementaci√≥n Pr√°ctica: GitHub Actions CI/CD</h3>

            <div className="bg-gray-50 rounded-lg p-6 mb-6">
              <h4 className="font-semibold text-gray-900 mb-3">Estructura del Proyecto:</h4>
              <pre className="bg-gray-800 text-green-400 p-4 rounded text-sm overflow-x-auto">
{`my-app/
‚îú‚îÄ‚îÄ .github/
‚îÇ   ‚îî‚îÄ‚îÄ workflows/
‚îÇ       ‚îú‚îÄ‚îÄ ci.yml
‚îÇ       ‚îî‚îÄ‚îÄ cd.yml
‚îú‚îÄ‚îÄ src/
‚îú‚îÄ‚îÄ tests/
‚îú‚îÄ‚îÄ Dockerfile
‚îú‚îÄ‚îÄ docker-compose.yml
‚îú‚îÄ‚îÄ k8s/
‚îÇ   ‚îú‚îÄ‚îÄ deployment.yml
‚îÇ   ‚îú‚îÄ‚îÄ service.yml
‚îÇ   ‚îî‚îÄ‚îÄ ingress.yml
‚îî‚îÄ‚îÄ package.json`}
              </pre>
            </div>

            <h4 className="text-lg font-semibold text-gray-900 mb-4">1. GitHub Actions CI Pipeline (.github/workflows/ci.yml)</h4>
            <div className="bg-gray-50 rounded-lg p-6 mb-6">
              <pre className="bg-gray-800 text-green-400 p-4 rounded text-sm overflow-x-auto">
{`name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run type check
      run: npm run type-check

    - name: Run unit tests
      run: npm run test:unit

    - name: Run integration tests
      run: npm run test:integration

    - name: Run E2E tests
      run: |
        npm run build
        npm run start &
        npm run test:e2e

    - name: Generate test coverage
      run: npm run test:coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info

  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security audit
      run: npm audit --audit-level high

    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build:
    needs: [test, security]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-staging:
    if: github.ref == 'refs/heads/develop'
    needs: build
    runs-on: ubuntu-latest
    environment: staging

    steps:
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment"
        # Aqu√≠ ir√≠an los comandos espec√≠ficos de deployment`}
              </pre>
            </div>

            <h4 className="text-lg font-semibold text-gray-900 mb-4">2. Dockerfile Optimizado para Producci√≥n</h4>
            <div className="bg-gray-50 rounded-lg p-6 mb-6">
              <pre className="bg-gray-800 text-green-400 p-4 rounded text-sm overflow-x-auto">
{`# Multi-stage build para optimizar tama√±o
FROM node:20-alpine AS builder

WORKDIR /app

# Copiar archivos de dependencias
COPY package*.json ./
COPY yarn.lock* ./

# Instalar dependencias (incluyendo devDependencies)
RUN npm ci --only=production && npm cache clean --force

# Copiar c√≥digo fuente
COPY . .

# Build de la aplicaci√≥n
RUN npm run build

# Stage de producci√≥n
FROM node:20-alpine AS production

# Crear usuario no-root para seguridad
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

WORKDIR /app

# Copiar archivos necesarios desde builder
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static

# Cambiar ownership de archivos
RUN chown -R nextjs:nodejs /app
USER nextjs

# Exponer puerto
EXPOSE 3000

ENV PORT 3000
ENV NODE_ENV production
ENV HOSTNAME "0.0.0.0"

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 CMD curl -f http://localhost:3000/api/health || exit 1

# Comando de inicio
CMD ["node", "server.js"]`}
              </pre>
            </div>

            <h4 className="text-lg font-semibold text-gray-900 mb-4">3. Kubernetes Deployment</h4>
            <div className="bg-gray-50 rounded-lg p-6 mb-6">
              <pre className="bg-gray-800 text-green-400 p-4 rounded text-sm overflow-x-auto">
{`# k8s/deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
  labels:
    app: my-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: my-app
        image: ghcr.io/mi-org/my-app:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: database-url
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: my-app-service
spec:
  selector:
    app: my-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-app-ingress
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
spec:
  tls:
  - hosts:
    - myapp.com
    secretName: myapp-tls
  rules:
  - host: myapp.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: my-app-service
            port:
              number: 80`}
              </pre>
            </div>

            <h2 className="text-2xl font-bold text-gray-900 mb-4">M√©tricas DORA: Midiendo el Performance de tu Equipo</h2>

            <p className="text-lg text-gray-700 mb-6">
              Las m√©tricas DORA (DevOps Research and Assessment) son el est√°ndar de oro para medir la performance de equipos de desarrollo. Google las define como los indicadores clave del performance organizacional.
            </p>

            <div className="space-y-4 mb-8">
              {devopsMetrics.map((metric, index) => (
                <Card key={metric.metric} className="border border-gray-200">
                  <CardHeader>
                    <CardTitle className="text-lg">{metric.metric}</CardTitle>
                    <CardDescription>{metric.description}</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="grid grid-cols-4 gap-4 text-sm">
                      <div className="text-center">
                        <div className="font-semibold text-green-600">Elite</div>
                        <div className="mt-1">{metric.elite}</div>
                      </div>
                      <div className="text-center">
                        <div className="font-semibold text-blue-600">High</div>
                        <div className="mt-1">{metric.high}</div>
                      </div>
                      <div className="text-center">
                        <div className="font-semibold text-yellow-600">Medium</div>
                        <div className="mt-1">{metric.medium}</div>
                      </div>
                      <div className="text-center">
                        <div className="font-semibold text-red-600">Low</div>
                        <div className="mt-1">{metric.low}</div>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>

            <h2 className="text-2xl font-bold text-gray-900 mb-4">Monitoring y Observabilidad: La Torre de Control</h2>

            <h3 className="text-xl font-semibold text-gray-900 mb-4">Stack de Observabilidad Moderno</h3>
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-6 mb-6">
              <h4 className="font-semibold text-gray-900 mb-3">Configuraci√≥n Prometheus + Grafana:</h4>
              <pre className="bg-gray-800 text-green-400 p-4 rounded text-sm overflow-x-auto">
{`# docker-compose.monitoring.yml
version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=\${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

volumes:
  prometheus_data:
  grafana_data:`}
              </pre>
            </div>

            <h3 className="text-xl font-semibold text-gray-900 mb-4">Application Performance Monitoring (APM)</h3>
            <div className="bg-gray-50 rounded-lg p-6 mb-6">
              <pre className="bg-gray-800 text-green-400 p-4 rounded text-sm overflow-x-auto">
{`// Next.js con OpenTelemetry para observabilidad
// instrumentation.ts
import { NodeSDK } from '@opentelemetry/sdk-node';
import { getNodeAutoInstrumentations } from '@opentelemetry/auto-instrumentations-node';
import { PeriodicExportingMetricReader } from '@opentelemetry/sdk-metrics';
import { PrometheusExporter } from '@opentelemetry/exporter-prometheus';

const sdk = new NodeSDK({
  instrumentations: [getNodeAutoInstrumentations()],
  metricReader: new PeriodicExportingMetricReader({
    exporter: new PrometheusExporter({
      port: 9464,
      endpoint: '/metrics',
    }),
    exportIntervalMillis: 5000,
  }),
});

sdk.start();

// API route con m√©tricas personalizadas
// pages/api/users.ts
import { NextApiRequest, NextApiResponse } from 'next';
import { metrics } from '@opentelemetry/api';

const meter = metrics.getMeter('my-app');
const requestCounter = meter.createCounter('http_requests_total', {
  description: 'Total number of HTTP requests',
});
const requestDuration = meter.createHistogram('http_request_duration_ms', {
  description: 'HTTP request duration in milliseconds',
});

function handler(req: NextApiRequest, res: NextApiResponse) {
  const start = Date.now();

  try {
    // Incrementar contador de requests
    requestCounter.add(1, {
      method: req.method,
      route: '/api/users',
    });

    // L√≥gica de la API
    const users = await getUsersFromDatabase();

    res.status(200).json(users);
  } catch (error) {
    requestCounter.add(1, {
      method: req.method,
      route: '/api/users',
      status: 'error',
    });

    res.status(500).json({ error: 'Internal server error' });
  } finally {
    // Registrar duraci√≥n del request
    const duration = Date.now() - start;
    requestDuration.record(duration, {
      method: req.method,
      route: '/api/users',
    });
  }
}`}
              </pre>
            </div>

            <h2 className="text-2xl font-bold text-gray-900 mb-4">Casos de √âxito: DevOps en Acci√≥n</h2>

            <div className="space-y-6 mb-8">
              <div className="bg-green-50 border border-green-200 rounded-lg p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-3">
                  <Rocket className="w-5 h-5 text-green-600 inline mr-2" />
                  Netflix - Chaos Engineering & Microservices
                </h3>
                <p className="text-gray-700 mb-3">
                  Netflix despliega 4,000 veces por d√≠a usando su plataforma Spinnaker. Su enfoque de chaos engineering con Chaos Monkey garantiza resiliencia a escala global.
                </p>
                <div className="grid grid-cols-3 gap-4 text-center text-sm">
                  <div>
                    <div className="text-2xl font-bold text-green-600">4,000</div>
                    <div className="text-gray-600">Deployments/d√≠a</div>
                  </div>
                  <div>
                    <div className="text-2xl font-bold text-green-600">99.97%</div>
                    <div className="text-gray-600">Uptime global</div>
                  </div>
                  <div>
                    <div className="text-2xl font-bold text-green-600">200M+</div>
                    <div className="text-gray-600">Usuarios activos</div>
                  </div>
                </div>
              </div>

              <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-3">
                  <Shield className="w-5 h-5 text-blue-600 inline mr-2" />
                  Amazon - Infrastructure as Code & Automation
                </h3>
                <p className="text-gray-700 mb-3">
                  Amazon despliega c√≥digo cada 11.7 segundos en promedio. Su AWS CloudFormation y CDK automatizaron completamente la infraestructura global.
                </p>
                <div className="grid grid-cols-3 gap-4 text-center text-sm">
                  <div>
                    <div className="text-2xl font-bold text-blue-600">11.7s</div>
                    <div className="text-gray-600">Tiempo entre deployments</div>
                  </div>
                  <div>
                    <div className="text-2xl font-bold text-blue-600">100%</div>
                    <div className="text-gray-600">Infrastructure as Code</div>
                  </div>
                  <div>
                    <div className="text-2xl font-bold text-blue-600">0.001%</div>
                    <div className="text-gray-600">Change failure rate</div>
                  </div>
                </div>
              </div>

              <div className="bg-purple-50 border border-purple-200 rounded-lg p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-3">
                  <Monitor className="w-5 h-5 text-purple-600 inline mr-2" />
                  Spotify - Feature Flags & Progressive Delivery
                </h3>
                <p className="text-gray-700 mb-3">
                  Spotify utiliza feature flags para deployments progresivos, permitiendo rollbacks instant√°neos y testing A/B de funcionalidades en producci√≥n.
                </p>
                <div className="grid grid-cols-3 gap-4 text-center text-sm">
                  <div>
                    <div className="text-2xl font-bold text-purple-600">95%</div>
                    <div className="text-gray-600">Features con flags</div>
                  </div>
                  <div>
                    <div className="text-2xl font-bold text-purple-600">&lt;1min</div>
                    <div className="text-gray-600">Rollback time</div>
                  </div>
                  <div>
                    <div className="text-2xl font-bold text-purple-600">500+</div>
                    <div className="text-gray-600">A/B tests activos</div>
                  </div>
                </div>
              </div>
            </div>

            <h2 className="text-2xl font-bold text-gray-900 mb-4">Implementando DevOps: Hoja de Ruta Pr√°ctica</h2>

            <div className="space-y-4 mb-8">
              {[
                {
                  phase: "1",
                  title: "Assessment y Cultura",
                  description: "Evaluar estado actual, formar equipos multidisciplinarios y establecer cultura DevOps.",
                  duration: "1-2 meses",
                  focus: "People & Process"
                },
                {
                  phase: "2",
                  title: "CI/CD B√°sico",
                  description: "Implementar pipeline b√°sico de CI/CD con tests automatizados y deployment manual.",
                  duration: "2-3 meses",
                  focus: "Automation Foundation"
                },
                {
                  phase: "3",
                  title: "Containerizaci√≥n",
                  description: "Dockerizar aplicaciones, implementar orchestration con Kubernetes.",
                  duration: "3-4 meses",
                  focus: "Infrastructure"
                },
                {
                  phase: "4",
                  title: "Monitoring & Observabilidad",
                  description: "Implementar logging, metrics, traces y alerting comprehensive.",
                  duration: "2-3 meses",
                  focus: "Visibility"
                },
                {
                  phase: "5",
                  title: "Optimizaci√≥n Avanzada",
                  description: "Feature flags, chaos engineering, performance optimization y security automation.",
                  duration: "Ongoing",
                  focus: "Excellence"
                }
              ].map((phase, index) => (
                <div key={phase.phase} className="flex items-start space-x-4">
                  <div className="w-10 h-10 bg-green-600 text-white rounded-full flex items-center justify-center font-bold text-sm flex-shrink-0">
                    {phase.phase}
                  </div>
                  <div className="flex-1">
                    <h3 className="font-semibold text-gray-900">{phase.title}</h3>
                    <p className="text-gray-700 mb-2">{phase.description}</p>
                    <div className="flex space-x-4 text-sm">
                      <span className="text-green-600 font-medium">Duraci√≥n: {phase.duration}</span>
                      <span className="text-gray-600">Focus: {phase.focus}</span>
                    </div>
                  </div>
                </div>
              ))}
            </div>

            <h2 className="text-2xl font-bold text-gray-900 mb-4">Tendencias DevOps 2025-2026: El Futuro es Ahora</h2>

            <h3 className="text-xl font-semibold text-gray-900 mb-4">1. AI-Powered DevOps (AIOps)</h3>
            <p className="text-lg text-gray-700 mb-6">
              La IA est√° transformando DevOps con predicci√≥n de fallos, auto-remediation y optimizaci√≥n autom√°tica de pipelines. GitHub Copilot para infraestructura est√° automatizando la escritura de manifiestos y scripts.
            </p>

            <h3 className="text-xl font-semibold text-gray-900 mb-4">2. Platform Engineering</h3>
            <p className="text-lg text-gray-700 mb-6">
              Equipos dedicados crean plataformas internas que simplifican DevOps para desarrolladores. Self-service infrastructure y golden paths que aceleran time-to-production.
            </p>

            <h3 className="text-xl font-semibold text-gray-900 mb-4">3. Security-First DevOps (DevSecOps)</h3>
            <div className="bg-red-50 border border-red-200 rounded-lg p-6 mb-6">
              <h4 className="font-semibold text-gray-900 mb-3">üîí Security Automation 2025:</h4>
              <ul className="space-y-2 text-gray-700">
                <li>‚Ä¢ <strong>SAST/DAST Integration:</strong> Security testing integrado en pipelines CI/CD</li>
                <li>‚Ä¢ <strong>Container Security Scanning:</strong> Vulnerability scanning autom√°tico de im√°genes</li>
                <li>‚Ä¢ <strong>Infrastructure Security:</strong> Policy-as-Code con Open Policy Agent</li>
                <li>‚Ä¢ <strong>Runtime Security:</strong> Monitoring de comportamiento an√≥malo en producci√≥n</li>
                <li>‚Ä¢ <strong>Compliance Automation:</strong> Auditor√≠as autom√°ticas SOC 2, GDPR, ISO 27001</li>
              </ul>
            </div>

            <h3 className="text-xl font-semibold text-gray-900 mb-4">4. Cloud-Native Everything</h3>
            <p className="text-lg text-gray-700 mb-8">
              Serverless, edge computing y multi-cloud strategies est√°n redefiniendo arquitecturas. Function-as-a-Service (FaaS) y event-driven architectures simplifican deployments y scaling.
            </p>

            <div className="bg-green-600 text-white rounded-lg p-8 text-center">
              <h3 className="text-xl font-bold mb-4">¬øListo para Transformar tu DevOps?</h3>
              <p className="mb-6">
                Implementamos pipelines CI/CD, infraestructura cloud y cultura DevOps que acelera tu time-to-market.
              </p>
              <Link href="/contacto">
                <Button className="bg-white text-green-600 hover:bg-gray-100 font-semibold px-8">
                  Consulta DevOps Gratuita
                  <GitBranch className="ml-2 h-4 w-4" />
                </Button>
              </Link>
            </div>

          </div>

          {/* Tags */}
          <div className="mt-12 pt-8 border-t border-gray-200">
            <h3 className="text-lg font-semibold text-gray-900 mb-4">Tags:</h3>
            <div className="flex flex-wrap gap-2">
              {["DevOps", "CI/CD", "GitHub Actions", "Docker", "Kubernetes", "Monitoring", "Automation", "Cloud", "Pipeline", "Infrastructure"].map((tag, index) => (
                <Badge key={tag} variant="secondary" className="text-xs">
                  {tag}
                </Badge>
              ))}
            </div>
          </div>

          {/* Related Articles */}
          <div className="mt-16">
            <h2 className="text-3xl font-bold text-gray-900 mb-8">Art√≠culos Relacionados</h2>
            <div className="grid md:grid-cols-3 gap-6">
              {[
                {
                  title: "Automatizaci√≥n de Procesos con IA en 2025",
                  excerpt: "RPA inteligente y automatizaci√≥n de workflows para optimizar operaciones empresariales.",
                  href: "/blog/automatizacion-procesos-ia-2025"
                },
                {
                  title: "Blockchain y Web3 en 2025",
                  excerpt: "Estado actual del blockchain, DeFi, NFTs y aplicaciones empresariales descentralizadas.",
                  href: "/blog/blockchain-web3-2025"
                },
                {
                  title: "Ciberseguridad Empresarial en 2024",
                  excerpt: "Principales amenazas y estrategias de protecci√≥n para empresas modernas.",
                  href: "/blog/ciberseguridad-2024-amenazas-principales"
                }
              ].map((article, index) => (
                <Link key={article.href} href={article.href}>
                  <Card className="hover:shadow-lg transition-shadow">
                    <div className="relative h-32 overflow-hidden rounded-t-lg">
                      <Image
                        src={`https://images.unsplash.com/photo-${1556075798 + index * 5000}-4825dfaaf498?w=400&h=200&fit=crop&auto=format&q=80`}
                        alt={article.title}
                        fill
                        className="object-cover"
                      />
                    </div>
                    <CardHeader>
                      <CardTitle className="text-lg line-clamp-2">{article.title}</CardTitle>
                      <CardDescription className="line-clamp-2">{article.excerpt}</CardDescription>
                    </CardHeader>
                  </Card>
                </Link>
              ))}
            </div>
          </div>
        </div>
      </article>

      <WhatsAppChat />
    </div>
  );
}
